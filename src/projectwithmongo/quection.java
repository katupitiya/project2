/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projectwithmongo;

import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.Mongo;
import com.mongodb.MongoClient;
import java.awt.Color;
import java.net.UnknownHostException;
import static java.nio.file.Files.lines;
import static java.nio.file.Files.lines;
import java.util.Arrays;
import java.util.List;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javafx.scene.input.KeyCode.Y;
import javax.swing.text.BadLocationException;
import javax.swing.text.Highlighter;

/**
 *
 * @author User
 */
public class quection extends javax.swing.JFrame {

    /**
     * Creates new form quection
     */
    public quection() {

        initComponents();
        //  Store1 store1=new Store1();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        text = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        hint = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        Hint = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        answer = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Quize");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Answer:");

        jButton2.setText("Result");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Hint");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        answer.setColumns(20);
        answer.setRows(5);
        answer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                answerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(answer);

        jButton4.setText("checkpath");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel4.setText("Mass value:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 291, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(text, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Hint, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(67, 67, 67)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(96, 96, 96)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hint, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(240, 240, 240))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(hint, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(jLabel2)
                        .addContainerGap(405, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(text, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(Hint, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    Quections s = new Quections();
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        Random r = new Random();
        Store1 store1 = new Store1();
        Hint.setText("");
        hint.setText(null);
        jLabel3.setText(s.getRandomElement(s.getQuection()));
        String atom = s.getRandomElement(s.getAtom());
        jLabel1.setText(atom);

        hint.setText(String.valueOf(store1.getMass(atom)));


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        Store1 store1 = new Store1();
        int d = Integer.parseInt(answer.getText());
        String gg = jLabel1.getText();
        System.out.println(gg);
        int result = store1.getAtomic(gg);
        System.out.println(d);
        System.out.println(result);
        if (d == result) {
            text.setText("Correct");
        } else {
            text.setText("Incorrect");
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        Rules rule = new Rules();

        if (jLabel3.getText().equals("Find the number of nutrons:")) {

            Hint.setText(rule.equationforelectorn());
        } else if (jLabel3.getText().equals("Find number of electron:")) {
            Hint.setText("Number of Proton =Number of Electron (only for Atoms)");
        } else {

        }

    }//GEN-LAST:event_jButton3ActionPerformed

    public String Atomic(String string) {
        return string;
    }


    private void answerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_answerMouseClicked


    }//GEN-LAST:event_answerMouseClicked
    String[] lines;

    public String[] gettoarray() {

        lines = answer.getText().split("\\n");
        //  lines = jTextArea1.getText();
        return lines;
    }

    public String getatomfromlabale() {
        String x = jLabel1.getText();
        Store1 s = new Store1();
        String atom = Integer.toString(s.getAtomic(x));
        return atom;
    }

    public String getmassfromlabale() {
        String mass = hint.getText();
        System.out.println(mass);
        return mass;
    }

    String[] line1;
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        MongoClient mm = null;
        try {
            mm = new MongoClient("localhost", 27017);
        } catch (UnknownHostException ex) {
            Logger.getLogger(quection.class.getName()).log(Level.SEVERE, null, ex);
        }
        // MongoDatabase  db = mm.getDatabase("test");
        System.out.println("server connection succsessfully");

        DB database = mm.getDB("test");
        System.out.println("Database connection is succsessful");
        System.out.println(database.getName());

        List<String> databasenames = mm.getDatabaseNames();
        System.out.println(databasenames);

        String h;
        String x = jLabel1.getText();
        Store1 s = new Store1();
        String atom = Integer.toString(s.getAtomic(x));
        System.out.println(atom);
        String mass = hint.getText();
        System.out.println(mass);
        System.out.println(getatomfromlabale());
        System.out.println(Arrays.toString(gettoarray()));
        Store3 store = new Store3();
        line1 = gettoarray();

        System.out.println("ggg" + Arrays.toString(line1));
        System.out.println(store.checksteps(line1, atom, mass));

        System.out.println("Collection has selected successfully");

        DBCollection collection = database.getCollection("categories3");
        BasicDBObject basicobject = new BasicDBObject();

        if (store.checksteps(line1, atom, mass).equals("true")) {

            answer.setForeground(Color.BLUE);
        } else {
            answer.setForeground(Color.red);
        }
        //add text area data to mongodb    
        /* for(int i=0;i<line1.length;i++){
     basicobject.put("_id",line1[i]);
     basicobject.put("parent",null);
    
     basicobject.put("_id",line1[i+1]);
     basicobject.put("parent",line1[i]);*/

//add solution paths to mongodb    
        //First path  
        basicobject.put("_id", mass + "=" + atom + "+" + "nutron");
        basicobject.put("parent", "mass value = proton + nutron");
        collection.insert(basicobject);
        basicobject.put("_id", mass + "-" + atom + "=" + "nutron");
        basicobject.put("parent", mass + "=" + atom + "+" + "nutron");
        collection.insert(basicobject);
        basicobject.put("_id", (Math.round(Double.parseDouble(mass)) - Integer.parseInt(atom)) + "=" + "nutron");
        basicobject.put("parent", mass + "-" + atom + "=" + "nutron");
        collection.insert(basicobject);
        basicobject.put("_id", "nutron" + "=" + (Math.round(Double.parseDouble(mass)) - Integer.parseInt(atom)));
        basicobject.put("parent", (Math.round(Double.parseDouble(mass)) - Integer.parseInt(atom)) + "=" + "nutron");
        collection.insert(basicobject);

        //Second path
        basicobject.put("_id", "-nutron" + "=" + "proton" + "-" + "massvalue");
        basicobject.put("parent", "mass value = proton + nutron");
        collection.insert(basicobject);
        basicobject.put("_id", "-nutron" + "=" + atom + "-" + mass);
        basicobject.put("parent", "-nutron" + "=" + "proton" + "-" + "massvalue");
        collection.insert(basicobject);
        basicobject.put("_id", "-nutron" + "=" + (Integer.parseInt(atom) - Math.round(Double.parseDouble(mass))));
        basicobject.put("parent", "-nutron" + "=" + atom + "-" + mass);
        collection.insert(basicobject);
        basicobject.put("_id", "nutron" + "=" + (Integer.parseInt(atom) - Math.round(Double.parseDouble(mass))) * -1);
        basicobject.put("parent", "-nutron" + "=" + (Integer.parseInt(atom) - Math.round(Double.parseDouble(mass))));
        collection.insert(basicobject);


    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(quection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(quection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(quection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(quection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new quection().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Hint;
    private javax.swing.JTextArea answer;
    private javax.swing.JLabel hint;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel text;
    // End of variables declaration//GEN-END:variables
}
